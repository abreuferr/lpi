stdin 
	entrada padrao 
	< 
	escritor de arquivos 0

stdout 
	saida padrao
	< ou >> 
	escritor de arquivos 1

stderr 
	erro padrao
	escritor de arquivos 2

# o resultado do comando "ls" sera redirecionado para 
# a saida padrao que eh o arquivo stdout.txt. Esse 
# redirecionamento eh feito atraves do operador >
#
cosmo@debian:~/myProject/lpi$ ls -l /etc/ > stdout.txt 
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
drwxr-xr-x  3 root root    4096 Apr 12 17:32 acpi
-rw-r--r--  1 root root    2981 Apr 12 17:32 adduser.conf
-rw-r--r--  1 root root      44 May 30 10:06 adjtime
-rw-r--r--  1 root root     197 May  5 10:48 aliases
(...)

# o resultado do comando "ls" sera redirecionado para 
# a saida padrao que eh o arquivo stdout.txt. Esse 
# redirecionamento eh feito atraves do operador 1>
#
cosmo@debian:~/myProject/lpi$ ls -l /etc/ 1> stdout.txt 
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
drwxr-xr-x  3 root root    4096 Apr 12 17:32 acpi
-rw-r--r--  1 root root    2981 Apr 12 17:32 adduser.conf
-rw-r--r--  1 root root      44 May 30 10:06 adjtime
-rw-r--r--  1 root root     197 May  5 10:48 aliases
(...)

# No exemplo abaixo, partindo do presuposto de que o 
# diretorio /ETC nao exista, quando o comando "ls /ETC"
# eh executado, isso ira resultar em uma mensagem de 
# erro. Mesmo utilizando o operado > para 
# redirecionar a mensagem de erro para um arquivo, 
# isso nao ira funcioanr.
# 
cosmo@debian:~/myProject/lpi$ ls /ETC > stdout.txt 
ls: cannot access /ETC: No such file or directory
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
cosmo@debian:~/myProject/lpi$ 

# Eh necessario utilizar o operador 2> para 
# redirecionar a mensagem de ERRO para um arquivo.
# 
cosmo@debian:~/myProject/lpi$ ls -l /ETC 2> stdout.txt 
cosmo@debian:~/myProject/lpi$ cat stdout.txt
ls: cannot access /ETC: No such file or directory

# No exemplo abaixo, o operador 1> ira redirecionar
# o resultado do comando "ls /etc" para a saida padrao,
# que eh o arquivo stdout.txt. Ja o operador 2>
# ira redirecionar a mensagem de erro causado pelo
# comando "ls /ETC", visto que odiretorio /ETC nao
# existe, para o arquivo stderror.txt
#
cosmo@debian:~/myProject/lpi$ ls /etc/ /ETC 1> stdout.txt 2> stderror.txt
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
/etc/:
acpi
adduser.conf
adjtime
aliases
(...)
cosmo@debian:~/myProject/lpi$ cat stderror.txt 
ls: cannot access /ETC: No such file or directory

# No exemplo abaixo, o operador 1> ira redirecionar o
# o resultado do comando "ls /etc" para a saida padrao, 
# que eh o arquivo stdout.txt. Ja os operadores 2>&1
# irao redirecionar o resultado do coamndo "ls /ETC", que 
# eh uma mensagem de erro, para a saida padrao que eh o 
# arquivo stdout.txt
#
cosmo@debian:~/myProject/lpi$ ls /etc/ /ETC 1> stdout.txt 2>&1
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
ls: cannot access /ETC: No such file or directory
/etc/:
acpi
adduser.conf
adjtime
aliases
(...)

# No exemplo abaixo, o operador &> ira redirecionar o
# resultado do comando "ls /etc" para a saida padrao. Ja
# a mensagem de erro, tambem sera redirecionado para a
# saida padrao.
#
# em relacao ao exemplo anterios ( 1> + 2>&1 = &> )
#
cosmo@debian:~/myProject/lpi$ ls /etc/ /ETC &> stdout.txt 
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
ls: cannot access /ETC: No such file or directory
/etc/:
acpi
adduser.conf
adjtime
aliases
(...)

# Utilizando o operador <, o arquivo /etc/passwd sera
# redirecionado para o camando cat. Isso Ã© um exemplo
# da opcao de STDIN. O recustado do comando sera
# redirecionado para o arquivo stdout.txt. Exemplo
# da opcao STDOUT.
# 
cosmo@debian:~/myProject/lpi$ cat < /etc/passwd > stdout.txt
cosmo@debian:~/myProject/lpi$ cat stdout.txt 
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
(...)
