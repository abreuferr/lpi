#: Title : nginx
#: Author : "Caio Abreu Ferreira" <abreuferr_gmail.com>
#: Description : implementando um servidor web e proxy reverso com o nginx - CentOS
#: Options : Weight: 2

Description: Candidates should be able to install and configure a reverse proxy 
server, Nginx. Basic configuration of Nginx as a HTTP server is included.

Key Knowledge Areas:
- Nginx
- Reverse Proxy
- Basic Web Server

Terms and Utilities:
- /etc/nginx/
- nginx

#
# Instalacao
#

# atualizacao
$ sudo yum update

# adicionando o repositorio do nginx
$ sudo yum install yum-utils
$ sudo vi /etc/yum.repos.d/nginx.repo
	[nginx-stable]
	name=nginx stable repo
	baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
	gpgcheck=1
	enabled=1
	gpgkey=https://nginx.org/keys/nginx_signing.key

	[nginx-mainline]
	name=nginx mainline repo
	baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
	gpgcheck=1
	enabled=0
	gpgkey=https://nginx.org/keys/nginx_signing.key

# atualizacao
$ sudo yum-config-manager --enable nginx-mainline
$ sudo yum update

# instalacao do nginx
$ sudo yum install nginx httpd-tools

# servico nginx
$ sudo systemctl start nginx
$ sudo systemctl enable nginx
$ sudo systemctl status nginx

# firewall
$ sudo firewall-cmd --add-service=http --permanent
$ sudo firewall-cmd --add-service=https --permanent
$ sudo firewall-cmd --reload

#
# Configuracao
#

# copia de seguranca do arquivo de configuracao do nginx
$ sudo cp /etc/nginx/nginx.conf{,.origin}

# arquivo de configuracao geral do nginx.
$ sudo vi /etc/nginx/nginx.conf
	# usuario dono do nginx.
	user nginx;

	# numero de processos em execucao.
	worker_processes auto;
	worker_processes [NUM];

	# arquivos de log da execucao do nginx.
       	error_log /var/log/nginx/error.log;

	# local do arquivo de pid.
	pid /run/nginx.pid;

	# eventos
	events {
		worker_connections 1024; 
	}

	http{
		(...)
		# arquivos de log da execucao do nginx.
		access_log /var/log/nginx/access.log;
	
		# nao exibe a versao do software nginx
		server_tokens off;

		# arquivos de configuracao auxiliar.
		# arquivos de configuracao dos dominios virtuais.
		include /etc/nginx/conf.d/*.conf;
	}

# testar os arquivos de configuracao.
$ sudo nginx -t
	nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
	nginx: configuration file /etc/nginx/nginx.conf test is successful

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m http://www.particula.local

#
# Virtual Host
#

# diretorio a onde sera armazenado o codigo do virtual host.
$ sudo mkdir -p /usr/share/nginx/particula.local/html/

# arquivo com a pagina indice do site.
$ sudo vi /usr/share/nginx/particula.local/html/index.html
	nginx.particula.local

# arquivo de configuracao BASICA do dominio virtual particula.local.
$ sudo vi /etc/nginx/conf.d/particula.local.conf
	server {
		# porta em que o nginx ira trabalhar, ipv4 e ipv6
		listen       80;

		# nome do dominio
		server_name  www.particula.local;

		# arquivos de log gerados pelo dominio virtual.
		access_log  /var/log/nginx/particula.local.access.log;
		error_log  /var/log/nginx/particula.local.error.log;

		location /html/ {
			# diretorio a onde sera armazenado os arquivos do site do
			# dominio virtual.
			root   /usr/share/nginx/particula.local/html;

			# nome do arquivo indice
			index  index.html index.htm;
		}
	}

# testar os arquivos de configuracao
$ sudo nginx -t

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m http://www.particula.local/html/

#
# Autenticacao Basica
#

# criar o arquivo para armazenar usuario/senha
$ sudo mkdir -p /usr/share/nginx/particula.local/webpass
$ sudo htpasswd -c /usr/share/nginx/particula.local/webpass/webpass <USUARIO>
$ sudo htpasswd /usr/share/nginx/particula.local/webpass/webpass <USUARIO>

# configuracao do VirtualHost particula.local
$ sudo vi /etc/nginx/conf.d/particula.local.conf
	server{
		location /webpass/ {
			root   /usr/share/nginx/particula.local/html;
			index  index.html index.htm;
			auth_basic "Restricted Content";
			auth_basic_user_file /usr/share/nginx/particula.local/webpass/webpass;
		}
	}

# testar os arquivos de configuracao
$ sudo nginx -t

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m http://www.particula.local/webpass/

#
# SSL
#

# diretorio de trabalho e permissao
$ sudo mkdir /etc/nginx/ssl
$ sudo chown -R root:root /etc/nginx/ssl
$ sudo chmod -R 600 /etc/nginx/ssl

# criando chave de criptografia
$ sudo openssl genrsa -out /etc/nginx/ssl/ca.key 2048

# gerando o arquivo CSR
$ sudo openssl req -new -key /etc/nginx/ssl/ca.key -out /etc/nginx/ssl/ca.csr

# assinar o certificado
$ sudo openssl x509 -req -days 365 -in /etc/nginx/ssl/ca.csr -signkey /etc/nginx/ssl/ca.key -out /etc/nginx/ssl/ca.crt

# alterando as permissoes dos arquivos de certificacao por motivos de seguranca
$ sudo chmod 0400 /etc/nginx/ssl/ca.*

# arquivo de configuracao do nginx.
$ sudo vi /etc/nginx/nginx.conf
	http{ 
		# SSL 
		ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
		ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
		ssl_session_cache   shared:SSL:10m;
		ssl_session_timeout 10m;
	}

# configuracao do nginx para trabalhar com certificado ssl
$ sudo vi /etc/nginx/conf.d/particula.local
	server {
	        # porta em que o nginx ira trabalhar, ipv4 e ipv6
	        listen 80;

		# nome do dominio
		server_name *.particula.local;

	        # redirecionar o trafego HTTP para o HTTPS
	        # desta forma, se por acaso o usuario digitar
		# na url o endereco HTTP, o nginx ira transferir
		# para o endereco HTTPS.
		return 301 https://$host$request_uri;
	}

	server {
		# geral
		access_log /var/log/nginx/particula.local.access.log;
		error_log /var/log/nginx/particula.local.error.log;
		root /usr/share/nginx/particula.local/html;

	        # porta em que o nginx ira trabalhar, ipv4 e ipv6
		# e o protocolo HTTPS/SSL
	        listen 443 ssl default_server;

	        # ssl
		ssl_certificate     /etc/nginx/ssl/ca.crt;
		ssl_certificate_key /etc/nginx/ssl/ca.key;

	        # gzip
	        gzip off;
	}

# testar os arquivos de configuracao
$ sudo nginx -t

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m https://www.particula.local

#
# PROXY REVERSO (COM CACHE e SEM SSL)
#

# diretorio a onde sera armazenado o cache
$ sudo mkdir -p /var/cache/nginx
$ sudo chmod 770 /var/cache/nginx

# comando utilizado para limpara o cache
$ sudo find /var/cache/nginx -type f -delete

# copia de seguranca
$ sudo cp /etc/nginx/nginx.conf{,.origin}

# configuracao geral do cache.
$ sudo vi /etc/nginx/nginx.conf
	http {
		include /etc/nginx/conf.d/*.conf;

		proxy_cache my_cache;
		proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=9000g inactive=1d;
		proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
		proxy_temp_path /var/cache/nginx/temp;
		proxy_cache_lock on;
		proxy_bind 0.0.0.0;
		proxy_cache_valid 200 302 10m;
		proxy_cache_valid 301 1h;

		# buffer
		proxy_buffering on;
		proxy_buffer_size 1k;
		proxy_buffers 24 4k;
		proxy_busy_buffers_size 8k;
		proxy_max_temp_file_size 2048m;
		proxy_temp_file_write_size 32k;

		# alterando o header da pagina.
                proxy_http_version 1.1;
		proxy_set_header HOST $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
	}

# configuracao referente ao dominio virtual particula.local
# para trabalhar com proxy reverso
$ sudo vi /etc/nginx/conf.d/particula.local.conf
	server {
		# geral
        	listen 80;
	        server_name *.particula.local;

	        # log files
	        access_log  /var/log/nginx/particula.local_access.log;
        	error_log   /var/log/nginx/particula.local_error.log;

		# proxy reverso
	        location / {
			# principal diretiva de configuracao do nginx para 
			# trabalhar como proxy reverso.
			# servidor web - 192.168.10.8
	                proxy_pass http://192.168.10.8;
	        }
	}

# testando os arquivos de configuracao do nginx.
$ sudo nginx -t

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m http://www.particula.local

#
# PROXY REVERSO (COM SSL)
#

# arquivo de configuracao do dominio virtual particula.local.
$ sudo vi /etc/nginx/conf.d/particula.local.conf
	# http
	server {
		# o nginx fica escutando a porta 80, ipv4/6
		listen 80;

		# redirecionamento do http para o https
		return 301 https://$host$request_uri;
		return 301 https://www.$host$request_uri;
	}

	# https
	server {
		# geral ssl
	        listen 443 ssl http2;

		# nome do dominio virtual.
	        server_name particula.local www.particula.local;

	        # log files
	        access_log  /var/log/nginx/particula.local_access.log;
        	error_log   /var/log/nginx/particula.local_error.lg;

		# trabalhando com o SSL
		ssl_certificate /etc/ssl/private/ca.crt;
		ssl_certificate_key /etc/ssl/private/ca.key;

		ssl_session_cache builtin:1000 shared:SSL:10m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;

		# proxy reverso
	        location / {
			# header
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# webserver nginx
			# servidor web - 192.168.10.8
	                proxy_pass http://192.168.10.8;
	        }
	}

# comando utilizado para testar o arquivo de configuracao do ngin
$ sudo nginx -t

# reler os arquivos de configuracao do nginx
$ sudo nginx -s reload

# teste
$ w3m https://www.particula.local
