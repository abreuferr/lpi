#: Title : Encrypted File Systems
#: Author : "Caio Abreu Ferreira" <abreuferr_gmail.com>
#: Description : Encrypted File Systems
#: Options : Weight: 3

Description: Candidates should be able to setup and configure 
encrypted file systems.

Key Knowledge Areas:
- Understand block device and file system encryption
- Use dm-crypt with LUKS to encrypt block devices
- Use eCryptfs to encrypt file systems, including home directories and
- PAM integration
- Be aware of plain dm-crypt and EncFS

Terms and Utilities:
- cryptsetup
- cryptmount
- /etc/crypttab
- ecryptfsd
- ecryptfs-* commands
- mount.ecryptfs, umount.ecryptfs
- pam_ecryptfs

#
# Teoria
#

# algoritmos de criptografia suportado pelo LUKS
	AES – Advanced Encryption Standard – FIPS PUB 197
	Twofish
	Serpent
	cast5 – RFC 2144
	cast6 – RFC 2612

#
# Instalacao
#

$ sudo apt-get update && sudo apt-get upgrade
$ sudo apt-get install cryptsetup

#
# Critografia de um disco rígido
#

# Identificando a particao a ser criptografada
#
$ sudo lsblk

NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdb    254:16   0    2G  0 disk

# Criando partição
#
$ sudo fdisk /dev/vdb

# Formatando o disco rígido com o LUKS
#
$ sudo lsblk           
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdb    254:16   0    2G  0 disk 
└─vdb1 254:17   0    2G  0 part 

# formatar a particao que sera criptografada
#
$ sudo cryptsetup luksFormat /dev/vdb1
$ sudo cryptsetup luksFormat --type luks1 /dev/DEVICE
$ sudo cryptsetup luksFormat --type luks2 /dev/DEVICE
$ sudo cryptsetup -y -v --type luks2 luksFormat /dev/sdc

WARNING!
========
This will overwrite data on /dev/vdb1 irrevocably.

Are you sure? (Type 'yes' in capital letters): YES
Enter passphrase for /dev/vdb1:
Verify passphrase:

$ sudo lsblk -f
NAME          FSTYPE      FSVER LABEL         UUID                                 FSAVAIL FSUSE% MOUNTPOINT
vdb                                                                                               
└─vdb1        crypto_LUKS 2                   248121e2-1c18-48b7-b676-1fa4801b7ace                
  └─cryptpart ext4        1.0   LuksPartition adc65594-2756-408a-af18-21104b27bc6f    1.8G     0% /media/cryptpart


# criar o sistema de arquivos criptografado
# sera mapeado o LUKS device no diretorio /dev/mapper/cryptpart
#
$ sudo cryptsetup luksOpen /dev/vdb1 cryptpart
Enter passphrase for /dev/vdb1:

$  ls -l /dev/mapper/cryptpart 
lrwxrwxrwx 1 root root 7 Sep 28 09:56 /dev/mapper/cryptpart -> ../dm-0

$ sudo lsblk -f
NAME          FSTYPE      FSVER LABEL         UUID                                 FSAVAIL FSUSE% MOUNTPOINT
vdb                                                                                               
└─vdb1        crypto_LUKS 2                   248121e2-1c18-48b7-b676-1fa4801b7ace                
  └─cryptpart ext4        1.0   LuksPartition adc65594-2756-408a-af18-21104b27bc6f    1.8G     0% /media/cryptpart


# criar o sistema de arquivos linux
#
$ sudo dd if=/dev/zero of=/dev/mapper/cryptpart 
dd: writing to '/dev/mapper/cryptpart': No space left on device
4159489+0 records in
4159488+0 records out
2129657856 bytes (2.1 GB, 2.0 GiB) copied, 54.7081 s, 38.9 MB/s

$ sudo mkfs -t ext4 -L LuksPartition /dev/mapper/cryptpart
mke2fs 1.46.2 (28-Feb-2021)
Creating filesystem with 519936 4k blocks and 130048 inodes
Filesystem UUID: 5fa6e393-5b7e-4ebc-b0ad-c230068d4fa0
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done

$ sudo lsblk -f /dev/mapper/cryptpart
NAME      FSTYPE FSVER LABEL         UUID                                 FSAVAIL FSUSE% MOUNTPOINT
cryptpart ext4   1.0   LuksPartition adc65594-2756-408a-af18-21104b27bc6f    1.8G     0% /media/cryptpart

# montar a particao
#
$ sudo mkdir /media/cryptpart         
$ sudo chmod 770 /media/cryptpart             
$ sudo chown root:users -R /media/cryptpart 
$ sudo mount /dev/mapper/cryptpart /media/cryptpart

# exibir informacao
#
$ sudo cryptsetup luksDump /dev/vdb1

# exibir o algoritmo de criptografia, o hash, tamanho da chave e a chave mestra
#
$ sudo cryptsetup luksDump /dev/vdb1 | grep cipher
	cipher: aes-xts-plain64

$ sudo dmsetup table --target crypt --showkey
cryptpart: 0 4159488 crypt aes-xts-plain64 :64:logon:cryptsetup:248121e2-1c18-48b7-b676-1fa4801b7ace-d0 0 254:17 32768

# visualizar o status do mapeamento
#
$ sudo cryptsetup -v status cryptpart
/dev/mapper/cryptpart is active and is in use.
  type:    LUKS2
  cipher:  aes-xts-plain64
  keysize: 512 bits
  key location: keyring
  device:  /dev/vdb1
  sector size:  512
  offset:  32768 sectors
  size:    4159488 sectors
  mode:    read/write
Command successful.

# desmontar a particao
#
$ sudo umount /media/cryptpart

# fechar o volume criptografado
#
$ sudo cryptsetup luksClose cryptpart

#
# Alterar o Algoritmo de Criptografia
#

# desmonta o volume
#
$ sudo umount /media/cryptpart

# alterando o algoritmo
#
$ sudo cryptsetup -c aes-xts-plain64 luksFormat

#
# Montando partição de forma automática a partição criptografada
#

$ sudo mkdir /etc/luks-keys
$ sudo touch /etc/luks-keys/disk_secret_key

# sudo cryptsetup luksAddKey <encrypted_device> <path_to_key>
#
$ sudo cryptsetup -v luksAddKey /dev/vdb1 /etc/luks-keys/disk_secret_key
Enter any existing passphrase: 
Key slot 0 unlocked.
Key slot 1 created.
Command successful.

$ sudo blkid | grep -i luks
/dev/vdb1: UUID="248121e2-1c18-48b7-b676-1fa4801b7ace" TYPE="crypto_LUKS" PARTUUID="5b623297-01"


# Montando de forma automática o disco rígido que esta
# criptografado.
#
$ sudo cat /etc/crypttab
cryptpart	UUID=248121e2-1c18-48b7-b676-1fa4801b7ace	/etc/luks-keys/disk_secret_key	luks

$ sudo cat /etc/fstab
/dev/mapper/cryptpart						/media/cryptpart ext4 defaults 0 0

#
# Criptografando uma imagem
#

# Criando o container a onde serão armazenado as informações e serão criptografados.
#
$ sudo dd if=/dev/zero of=/luks-container.img bs=1M count=300
300+0 records in
300+0 records out
314572800 bytes (315 MB, 300 MiB) copied, 0.265478 s, 1.2 GB/s

# Criptografando o container
#
$ sudo cryptsetup luksFormat --type=luks1 --hash=sha512 --key-size=512 --cipher=aes-xts-plain64 /luks-container.img 

WARNING!
========
This will overwrite data on /luks-container.img irrevocably.

Are you sure? (Type 'yes' in capital letters): YES
Enter passphrase for /luks-container.img: 
Verify passphrase: 

# Obtendo informações sobre o container que foi criptografado
#
$ sudo cryptsetup luksDump /luks-container.img
LUKS header information for /luks-container.img

Version:       	1
Cipher name:   	aes
Cipher mode:   	xts-plain64
Hash spec:     	sha512
Payload offset:	4096
MK bits:       	512
MK digest:     	8a 23 93 97 37 97 87 1b 85 56 df e4 5f af 4c f0 f6 48 17 92 
MK salt:       	03 af 26 00 a1 26 29 8d f1 ab 05 e1 60 af 2a ce 
               	e7 2c 9b 58 dd 8c 61 d5 e1 aa 71 8d 59 e5 af 9a 
MK iterations: 	129007
UUID:          	0cbd207f-dde2-46de-8b17-c5f1fd92b493

Key Slot 0: ENABLED
	Iterations:         	2235768
	Salt:               	c2 68 1f 70 ae e0 8b f3 a7 b3 0c d9 29 85 b8 0e 
	                      	f2 e2 0f 82 1a 8b fc 71 80 54 60 40 25 b4 b6 dd 
	Key material offset:	8
	AF stripes:            	4000
Key Slot 1: DISABLED
Key Slot 2: DISABLED
Key Slot 3: DISABLED
Key Slot 4: DISABLED
Key Slot 5: DISABLED
Key Slot 6: DISABLED
Key Slot 7: DISABLED

# Criando  container onde a chave de criptografaia será armazenada
#
$ sudo dd if=/dev/urandom of=/container-key bs=512 count=8 
8+0 records in
8+0 records out
4096 bytes (4.1 kB, 4.0 KiB) copied, 0.000291753 s, 14.0 MB/s

# Transferindo a chave de criptografia para o container "container-key"
#
$ sudo cryptsetup luksAddKey /luks-container.img /container-key
Enter any existing passphrase: 

# Abrindo o container com a chave de criptografia presente no container "container-key"
#
$ sudo cryptsetup luksOpen /luks-container.img luks-container-crypt --key-file=/container-key

# Criando o file system e montando
#
$ sudo mkfs.ext4 /dev/mapper/luks-container-crypt 

$ sudo mkdir /media/container         
$ sudo chmod 770 /media/container             
$ sudo chown root:users -R /media/container 
$ sudo mount /dev/mapper/luks-container-crypt /media/container

$ cat /etc/crypttab
luks-container-crypt /luks-container.img /container-key luks

$ cat /etc/fstab
/dev/mapper/luks-container-crypt	/media/container	ext4	defaults	0 2